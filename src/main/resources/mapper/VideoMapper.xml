<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!--
namespace:名称空间，一般需要保持全局唯一，最好是和dao层的java接口保持一致
可以映射sql语句到对应的方法名称和参数，返回类型



mybatis 是使用接口动态代理
-->
<mapper namespace="cc.insistor.dao.VideoMapper">
    <!--
      statement sql
      id:当前mapper下需要唯一
      resultType：sql查询结果集的封装
      -->






    <resultMap id="VideoOrderResultMap" type="cc.insistor.domain.VideoOrder">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="out_trade_no" property="outTradeNo"/>
        <result column="create_time" property="createTime"/>
        <result column="state" property="state"/>
        <result column="total_fee" property="totalFee"/>
        <result column="video_id" property="videoId"/>
        <result column="video_title" property="videoTitle"/>
        <result column="video_img" property="videoImg"/>
        <!--
         association 配置属性一对一
         property 对应videoOrder里面的user属性名
         javaType 这个属性的类型
         -->
        <association property="user" javaType="cc.insistor.domain.User">
            <id property="id"  column="user_id"/>
            <result property="name" column="name"/>
            <result property="headImg" column="head_img"/>
            <result property="createTime" column="create_time"/>
            <result property="phone" column="phone"/>
        </association>

    </resultMap>
    <!--一对一管理查询订单， 订单内部包含用户属性-->
    <select id="queryVideoOrderList" resultMap="VideoOrderResultMap">
        select
         o.id id,
         o.user_id ,
         o.out_trade_no,
         o.create_time,
         o.state,
         o.total_fee,
         o.video_id,
         o.video_title,
         o.video_img,
         u.name,
         u.head_img,
         u.create_time,
         u.phone
         from video_order o left join user u on o.user_id = u.id
    </select>








    <resultMap id="VideoResultMap" type="cc.insistor.domain.Video">
        <!--
        id 指定查询列的唯一标示
        column 数据库字段的名称
        property pojo类的名称
        -->
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="video_tile" property="title"  jdbcType="VARCHAR" />
        <result column="summary" property="summary"  jdbcType="VARCHAR" />
        <result column="cover_img"  property="coverImg"  jdbcType="VARCHAR" />
    </resultMap>
    <select id="selectBaseFieldByIdWithResultMap" resultMap="VideoResultMap">
        select id , title as video_tile, summary, cover_img from video where id = #{video_id}
    </select>









    <select id="selectById" resultType="cc.insistor.domain.Video">
      select * from video where id = #{video_id}
   </select>

<!--    <select id="selectList" resultType="cc.insistor.domain.Video">-->
<!--        select * from video-->
<!--    </select>-->

    <select id="selectByPointAndTitleLike" resultType="cc.insistor.domain.Video">
        select * from video where point=#{point} and title like concat('%', #{title},'%')
    </select>


    <insert id="add" parameterType="cc.insistor.domain.Video" useGeneratedKeys="true" keyProperty="id" keyColumn="id" >
        INSERT INTO `video` ( `title`, `summary`, `cover_img`, `price`, `create_time`, `point`)
        VALUES
        (#{title,jdbcType=VARCHAR},#{summary,jdbcType=VARCHAR},#{coverImg,jdbcType=VARCHAR},#{price,jdbcType=INTEGER},
        #{createTime,jdbcType=TIMESTAMP},#{point,jdbcType=DOUBLE});
    </insert>



    <!--批量插入-->
    <insert id="addBatch" parameterType="cc.insistor.domain.Video" useGeneratedKeys="true" keyProperty="id" keyColumn="id" >

        INSERT INTO `video` ( `title`, `summary`, `cover_img`, `price`, `create_time`, `point`)
        VALUES

        <foreach collection="list" item="video" separator=",">

            (#{video.title,jdbcType=VARCHAR},#{video.summary,jdbcType=VARCHAR},#{video.coverImg,jdbcType=VARCHAR},
            #{video.price,jdbcType=INTEGER},
            #{video.createTime,jdbcType=TIMESTAMP},#{video.point,jdbcType=DOUBLE})

        </foreach>

    </insert>

    <update id="updateVideo" parameterType="cc.insistor.domain.Video">
        update video
        set
        title = #{title,jdbcType=VARCHAR},
        summary = #{summary,jdbcType=VARCHAR},
        cover_img = #{coverImg,jdbcType=VARCHAR},
        price = #{price,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        point = #{point,jdbcType=DOUBLE}
        where
        id = #{id}
    </update>



    <update id="updateVideoSelective" parameterType="cc.insistor.domain.Video">
        update video
        <trim prefix="set" suffixOverrides=",">
            <if test="title != null "> title = #{title,jdbcType=VARCHAR},</if>
            <if test="summary != null "> summary = #{summary,jdbcType=VARCHAR},</if>
            <if test="coverImg != null "> cover_img = #{coverImg,jdbcType=VARCHAR},</if>
            <if test="price != 0 "> price = #{price,jdbcType=INTEGER},</if>
            <if test="createTime !=null "> create_time = #{createTime,jdbcType=TIMESTAMP},</if>
            <!--一定要看pojo类里面的是基本数据类型，还是包装数据类型-->
            <if test="point != null "> point = #{point,jdbcType=DOUBLE},</if>
        </trim>
        where
        id = #{id}
    </update>



    <delete id="deleteByCreateTimeAndPrice" parameterType="java.util.Map">
        delete from video where create_time <![CDATA[ > ]]> #{createTime} and price <![CDATA[ >= ]]> #{price}
    </delete>
</mapper>